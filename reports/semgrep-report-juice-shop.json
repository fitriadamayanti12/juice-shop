[
 {
   "Id": 175524476,
   "Rule Name": "javascript.express.code.vm-express.vm-express",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/b2bOrder.ts#L22",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524476",
   "Created At": "2025-04-23 02:26:11.213274",
   "Last Opened At": "2025-04-23 02:26:10.704879",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application might dynamically evaluate untrusted input, which can lead to a code injection vulnerability. An attacker can execute arbitrary code, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing code containing user input. If this is unavoidable, validate and sanitize the input, and use safe alternatives for evaluating user input."
 },
 {
   "Id": 175524475,
   "Rule Name": "javascript.express.code.vm-express.vm-express",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/fileUpload.ts#L83",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524475",
   "Created At": "2025-04-23 02:26:11.213257",
   "Last Opened At": "2025-04-23 02:26:10.704872",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application might dynamically evaluate untrusted input, which can lead to a code injection vulnerability. An attacker can execute arbitrary code, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing code containing user input. If this is unavoidable, validate and sanitize the input, and use safe alternatives for evaluating user input."
 },
 {
   "Id": 175524474,
   "Rule Name": "javascript.express.code.vm-express.vm-express",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/fileUpload.ts#L116",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524474",
   "Created At": "2025-04-23 02:26:11.213242",
   "Last Opened At": "2025-04-23 02:26:10.704868",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application might dynamically evaluate untrusted input, which can lead to a code injection vulnerability. An attacker can execute arbitrary code, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing code containing user input. If this is unavoidable, validate and sanitize the input, and use safe alternatives for evaluating user input."
 },
 {
   "Id": 175524473,
   "Rule Name": "javascript.express.db.sequelize-express.sequelize-express",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/dbSchemaChallenge_1.ts#L5",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524473",
   "Created At": "2025-04-23 02:26:11.213226",
   "Last Opened At": "2025-04-23 02:26:10.704863",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions."
 },
 {
   "Id": 175524472,
   "Rule Name": "javascript.express.db.sequelize-express.sequelize-express",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/dbSchemaChallenge_3.ts#L11",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524472",
   "Created At": "2025-04-23 02:26:11.213210",
   "Last Opened At": "2025-04-23 02:26:10.704858",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions."
 },
 {
   "Id": 175524471,
   "Rule Name": "javascript.express.db.sequelize-express.sequelize-express",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/unionSqlInjectionChallenge_1.ts#L6",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524471",
   "Created At": "2025-04-23 02:26:11.213194",
   "Last Opened At": "2025-04-23 02:26:10.704854",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions."
 },
 {
   "Id": 175524470,
   "Rule Name": "javascript.express.db.sequelize-express.sequelize-express",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/unionSqlInjectionChallenge_3.ts#L10",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524470",
   "Created At": "2025-04-23 02:26:11.213173",
   "Last Opened At": "2025-04-23 02:26:10.704849",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions."
 },
 {
   "Id": 175524469,
   "Rule Name": "javascript.express.db.sequelize-express.sequelize-express",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/login.ts#L36",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524469",
   "Created At": "2025-04-23 02:26:11.213157",
   "Last Opened At": "2025-04-23 02:26:10.704844",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions."
 },
 {
   "Id": 175524468,
   "Rule Name": "javascript.express.db.sequelize-express.sequelize-express",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/search.ts#L23",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524468",
   "Created At": "2025-04-23 02:26:11.213141",
   "Last Opened At": "2025-04-23 02:26:10.704839",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions."
 },
 {
   "Id": 175524467,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/dataExport.ts#L61",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524467",
   "Created At": "2025-04-23 02:26:11.213125",
   "Last Opened At": "2025-04-23 02:26:10.704834",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524466,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/dataExport.ts#L80",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524466",
   "Created At": "2025-04-23 02:26:11.213109",
   "Last Opened At": "2025-04-23 02:26:10.704830",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524465,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/likeProductReviews.ts#L18",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524465",
   "Created At": "2025-04-23 02:26:11.213094",
   "Last Opened At": "2025-04-23 02:26:10.704825",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524464,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/likeProductReviews.ts#L25",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524464",
   "Created At": "2025-04-23 02:26:11.213077",
   "Last Opened At": "2025-04-23 02:26:10.704819",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524463,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/likeProductReviews.ts#L31",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524463",
   "Created At": "2025-04-23 02:26:11.213061",
   "Last Opened At": "2025-04-23 02:26:10.704815",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524462,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/likeProductReviews.ts#L42",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524462",
   "Created At": "2025-04-23 02:26:11.213046",
   "Last Opened At": "2025-04-23 02:26:10.704810",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524461,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/orderHistory.ts#L17",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524461",
   "Created At": "2025-04-23 02:26:11.213030",
   "Last Opened At": "2025-04-23 02:26:10.704805",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524460,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/orderHistory.ts#L36",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524460",
   "Created At": "2025-04-23 02:26:11.213014",
   "Last Opened At": "2025-04-23 02:26:10.704800",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524459,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": true,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/showProductReviews.ts#L36",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524459",
   "Created At": "2025-04-23 02:26:11.212998",
   "Last Opened At": "2025-04-23 02:26:10.704795",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524458,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": true,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/trackOrder.ts#L18",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524458",
   "Created At": "2025-04-23 02:26:11.212979",
   "Last Opened At": "2025-04-23 02:26:10.704790",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524457,
   "Rule Name": "javascript.express.mongodb.express-mongo-nosqli.express-mongo-nosqli",
   "Product": "Code",
   "Severity": "Critical",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/updateProductReviews.ts#L18",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524457",
   "Created At": "2025-04-23 02:26:11.212959",
   "Last Opened At": "2025-04-23 02:26:10.704786",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a `../data/mongodb` statement that comes from a `req` argument. This could lead to NoSQL injection if the variable is user-controlled and is not properly sanitized. Be sure to properly sanitize the data if you absolutely must pass request data into a mongo query."
 },
 {
   "Id": 175524456,
   "Rule Name": "generic.secrets.security.detected-generic-secret.detected-generic-secret",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/users.yml#L150",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524456",
   "Created At": "2025-04-23 02:26:11.212943",
   "Last Opened At": "2025-04-23 02:26:10.704781",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Generic Secret detected"
 },
 {
   "Id": 175524455,
   "Rule Name": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/frontend/src/app/app.guard.spec.ts#L40",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524455",
   "Created At": "2025-04-23 02:26:11.212927",
   "Last Opened At": "2025-04-23 02:26:10.704777",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "JWT token detected"
 },
 {
   "Id": 175524454,
   "Rule Name": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/frontend/src/app/last-login-ip/last-login-ip.component.spec.ts#L61",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524454",
   "Created At": "2025-04-23 02:26:11.212911",
   "Last Opened At": "2025-04-23 02:26:10.704772",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "JWT token detected"
 },
 {
   "Id": 175524453,
   "Rule Name": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/frontend/src/app/last-login-ip/last-login-ip.component.spec.ts#L67",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524453",
   "Created At": "2025-04-23 02:26:11.212895",
   "Last Opened At": "2025-04-23 02:26:10.704767",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "JWT token detected"
 },
 {
   "Id": 175524452,
   "Rule Name": "generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/.github/workflows/sonarcloud.yml#L50",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524452",
   "Created At": "2025-04-23 02:26:11.212879",
   "Last Opened At": "2025-04-23 02:26:10.704762",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "SonarQube Docs API Key detected"
 },
 {
   "Id": 175524451,
   "Rule Name": "generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/.github/workflows/sonarcloud.yml#L52",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524451",
   "Created At": "2025-04-23 02:26:11.212863",
   "Last Opened At": "2025-04-23 02:26:10.704757",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "SonarQube Docs API Key detected"
 },
 {
   "Id": 175524450,
   "Rule Name": "javascript.browser.security.insecure-document-method.insecure-document-method",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/frontend/src/hacking-instructor/index.ts#L113",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524450",
   "Created At": "2025-04-23 02:26:11.212847",
   "Last Opened At": "2025-04-23 02:26:10.704752",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
 },
 {
   "Id": 175524449,
   "Rule Name": "javascript.express.file.fs-express.fs-express",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/fileUpload.ts#L33",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524449",
   "Created At": "2025-04-23 02:26:11.212831",
   "Last Opened At": "2025-04-23 02:26:10.704747",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524448,
   "Rule Name": "javascript.express.file.fs-express.fs-express",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/fileUpload.ts#L38",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524448",
   "Created At": "2025-04-23 02:26:11.212815",
   "Last Opened At": "2025-04-23 02:26:10.704743",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524447,
   "Rule Name": "javascript.express.file.fs-express.fs-express",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/profileImageFileUpload.ts#L28",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524447",
   "Created At": "2025-04-23 02:26:11.212799",
   "Last Opened At": "2025-04-23 02:26:10.704738",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524446,
   "Rule Name": "javascript.express.file.fs-express.fs-express",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/profileImageUrlUpload.ts#L31",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524446",
   "Created At": "2025-04-23 02:26:11.212783",
   "Last Opened At": "2025-04-23 02:26:10.704734",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524445,
   "Rule Name": "javascript.express.file.fs-express.fs-express",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/vulnCodeFixes.ts#L80",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524445",
   "Created At": "2025-04-23 02:26:11.212767",
   "Last Opened At": "2025-04-23 02:26:10.704729",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524444,
   "Rule Name": "javascript.express.file.fs-express.fs-express",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/vulnCodeSnippet.ts#L94",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524444",
   "Created At": "2025-04-23 02:26:11.212751",
   "Last Opened At": "2025-04-23 02:26:10.704724",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524443,
   "Rule Name": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/dbSchemaChallenge_1.ts#L5",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524443",
   "Created At": "2025-04-23 02:26:11.212735",
   "Last Opened At": "2025-04-23 02:26:10.704720",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements."
 },
 {
   "Id": 175524442,
   "Rule Name": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/dbSchemaChallenge_3.ts#L11",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524442",
   "Created At": "2025-04-23 02:26:11.212719",
   "Last Opened At": "2025-04-23 02:26:10.704715",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements."
 },
 {
   "Id": 175524441,
   "Rule Name": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/unionSqlInjectionChallenge_1.ts#L6",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524441",
   "Created At": "2025-04-23 02:26:11.212703",
   "Last Opened At": "2025-04-23 02:26:10.704711",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements."
 },
 {
   "Id": 175524440,
   "Rule Name": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/unionSqlInjectionChallenge_3.ts#L10",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524440",
   "Created At": "2025-04-23 02:26:11.212687",
   "Last Opened At": "2025-04-23 02:26:10.704706",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements."
 },
 {
   "Id": 175524439,
   "Rule Name": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/login.ts#L36",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524439",
   "Created At": "2025-04-23 02:26:11.212672",
   "Last Opened At": "2025-04-23 02:26:10.704702",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements."
 },
 {
   "Id": 175524438,
   "Rule Name": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/search.ts#L23",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524438",
   "Created At": "2025-04-23 02:26:11.212656",
   "Last Opened At": "2025-04-23 02:26:10.704696",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements."
 },
 {
   "Id": 175524437,
   "Rule Name": "yaml.github-actions.security.run-shell-injection.run-shell-injection",
   "Product": "Code",
   "Severity": "High",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/.github/workflows/manual-workflow.yml#L44",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524437",
   "Created At": "2025-04-23 02:26:11.212640",
   "Last Opened At": "2025-04-23 02:26:10.704691",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\"."
 },
 {
   "Id": 175524436,
   "Rule Name": "html.security.audit.missing-integrity.missing-integrity",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/frontend/src/index.html#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524436",
   "Created At": "2025-04-23 02:26:11.212624",
   "Last Opened At": "2025-04-23 02:26:10.704687",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
 },
 {
   "Id": 175524435,
   "Rule Name": "html.security.audit.missing-integrity.missing-integrity",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/frontend/src/index.html#L15",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524435",
   "Created At": "2025-04-23 02:26:11.212608",
   "Last Opened At": "2025-04-23 02:26:10.704682",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
 },
 {
   "Id": 175524434,
   "Rule Name": "html.security.audit.missing-integrity.missing-integrity",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/frontend/src/index.html#L16",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524434",
   "Created At": "2025-04-23 02:26:11.212592",
   "Last Opened At": "2025-04-23 02:26:10.704677",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
 },
 {
   "Id": 175524433,
   "Rule Name": "javascript.browser.security.eval-detected.eval-detected",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/captcha.ts#L23",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524433",
   "Created At": "2025-04-23 02:26:11.212575",
   "Last Opened At": "2025-04-23 02:26:10.704672",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
 },
 {
   "Id": 175524432,
   "Rule Name": "javascript.browser.security.eval-detected.eval-detected",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/userProfile.ts#L36",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524432",
   "Created At": "2025-04-23 02:26:11.212558",
   "Last Opened At": "2025-04-23 02:26:10.704667",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
 },
 {
   "Id": 175524431,
   "Rule Name": "javascript.express.express-fs-filename.express-fs-filename",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/profileImageFileUpload.ts#L28",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524431",
   "Created At": "2025-04-23 02:26:11.212542",
   "Last Opened At": "2025-04-23 02:26:10.704662",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524430,
   "Rule Name": "javascript.express.express-fs-filename.express-fs-filename",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/profileImageUrlUpload.ts#L31",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524430",
   "Created At": "2025-04-23 02:26:11.212526",
   "Last Opened At": "2025-04-23 02:26:10.704657",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524429,
   "Rule Name": "javascript.express.express-fs-filename.express-fs-filename",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/vulnCodeFixes.ts#L79",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524429",
   "Created At": "2025-04-23 02:26:11.212510",
   "Last Opened At": "2025-04-23 02:26:10.704652",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524428,
   "Rule Name": "javascript.express.express-fs-filename.express-fs-filename",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/vulnCodeFixes.ts#L80",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524428",
   "Created At": "2025-04-23 02:26:11.212494",
   "Last Opened At": "2025-04-23 02:26:10.704647",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524427,
   "Rule Name": "javascript.express.express-fs-filename.express-fs-filename",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/vulnCodeSnippet.ts#L93",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524427",
   "Created At": "2025-04-23 02:26:11.212478",
   "Last Opened At": "2025-04-23 02:26:10.704642",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524426,
   "Rule Name": "javascript.express.express-fs-filename.express-fs-filename",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/vulnCodeSnippet.ts#L94",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524426",
   "Created At": "2025-04-23 02:26:11.212462",
   "Last Opened At": "2025-04-23 02:26:10.704637",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files."
 },
 {
   "Id": 175524425,
   "Rule Name": "javascript.express.open-redirect-deepsemgrep.open-redirect-deepsemgrep",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/redirect.ts#L19",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524425",
   "Created At": "2025-04-23 02:26:11.212447",
   "Last Opened At": "2025-04-23 02:26:10.704632",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a URL using user-controlled input which can lead to an open redirect vulnerability. An attacker can manipulate the URL and redirect users to an arbitrary domain. Open redirect vulnerabilities can lead to issues such as Cross-site scripting (XSS) or redirecting to a malicious domain for activities such as phishing to capture users' credentials. To prevent this vulnerability perform strict input validation of the domain against an allowlist of approved domains. Notify a user in your application that they are leaving the website. Display a domain where they are redirected to the user. A user can then either accept or deny the redirect to an untrusted site."
 },
 {
   "Id": 175524424,
   "Rule Name": "javascript.express.request.ssrf-deepsemgrep.ssrf-deepsemgrep",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/profileImageUrlUpload.ts#L23",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524424",
   "Created At": "2025-04-23 02:26:11.212431",
   "Last Opened At": "2025-04-23 02:26:10.704627",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Untrusted input might be used to build an HTTP request, which can lead to a Server-side request forgery (SSRF) vulnerability. SSRF allows an attacker to send crafted requests from the server side to other internal or external systems. SSRF can lead to unauthorized access to sensitive data and, in some cases, allow the attacker to control applications or systems that trust the vulnerable service. To prevent this vulnerability, avoid allowing user input to craft the base request. Instead, treat it as part of the path or query parameter and encode it appropriately. When user input is necessary to prepare the HTTP request, perform strict input validation. Additionally, whenever possible, use allowlists to only interact with expected, trusted domains."
 },
 {
   "Id": 175524423,
   "Rule Name": "javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/server.ts#L261",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524423",
   "Created At": "2025-04-23 02:26:11.212415",
   "Last Opened At": "2025-04-23 02:26:10.704622",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource."
 },
 {
   "Id": 175524422,
   "Rule Name": "javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/server.ts#L265",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524422",
   "Created At": "2025-04-23 02:26:11.212399",
   "Last Opened At": "2025-04-23 02:26:10.704617",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource."
 },
 {
   "Id": 175524421,
   "Rule Name": "javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/server.ts#L269",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524421",
   "Created At": "2025-04-23 02:26:11.212383",
   "Last Opened At": "2025-04-23 02:26:10.704612",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource."
 },
 {
   "Id": 175524420,
   "Rule Name": "javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/server.ts#L273",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524420",
   "Created At": "2025-04-23 02:26:11.212367",
   "Last Opened At": "2025-04-23 02:26:10.704607",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource."
 },
 {
   "Id": 175524419,
   "Rule Name": "javascript.express.security.audit.express-detect-notevil-usage.express-detect-notevil-usage",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/b2bOrder.ts#L22",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524419",
   "Created At": "2025-04-23 02:26:11.212351",
   "Last Opened At": "2025-04-23 02:26:10.704602",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected usage of the `notevil` package, which is unmaintained and has vulnerabilities. Using any sort of `eval()` functionality can be very dangerous, but if you must, the `eval` package is an up to date alternative. Be sure that only trusted input reaches an `eval()` function."
 },
 {
   "Id": 175524418,
   "Rule Name": "javascript.express.security.audit.express-libxml-vm-noent.express-libxml-vm-noent",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/fileUpload.ts#L83",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524418",
   "Created At": "2025-04-23 02:26:11.212335",
   "Last Opened At": "2025-04-23 02:26:10.704597",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected use of parseXml() function with the `noent` field set to `true`. This can lead to an XML External Entities (XXE) attack if untrusted data is passed into it."
 },
 {
   "Id": 175524417,
   "Rule Name": "javascript.express.security.audit.express-open-redirect.express-open-redirect",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/redirect.ts#L19",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524417",
   "Created At": "2025-04-23 02:26:11.212319",
   "Last Opened At": "2025-04-23 02:26:10.704592",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application redirects to a URL specified by user-supplied input `query` that is not validated. This could redirect users to malicious locations. Consider using an allow-list approach to validate URLs, or warn users they are being redirected to a third-party website."
 },
 {
   "Id": 175524416,
   "Rule Name": "javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/dataErasure.ts#L69",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524416",
   "Created At": "2025-04-23 02:26:11.212303",
   "Last Opened At": "2025-04-23 02:26:10.704587",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Possible writing outside of the destination, make sure that the target path is nested in the intended destination"
 },
 {
   "Id": 175524415,
   "Rule Name": "javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/keyServer.ts#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524415",
   "Created At": "2025-04-23 02:26:11.212287",
   "Last Opened At": "2025-04-23 02:26:10.704581",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Possible writing outside of the destination, make sure that the target path is nested in the intended destination"
 },
 {
   "Id": 175524414,
   "Rule Name": "javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/logfileServer.ts#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524414",
   "Created At": "2025-04-23 02:26:11.212271",
   "Last Opened At": "2025-04-23 02:26:10.704576",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Possible writing outside of the destination, make sure that the target path is nested in the intended destination"
 },
 {
   "Id": 175524413,
   "Rule Name": "javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/quarantineServer.ts#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524413",
   "Created At": "2025-04-23 02:26:11.212255",
   "Last Opened At": "2025-04-23 02:26:10.704571",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Possible writing outside of the destination, make sure that the target path is nested in the intended destination"
 },
 {
   "Id": 175524412,
   "Rule Name": "javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/fileServer.ts#L33",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524412",
   "Created At": "2025-04-23 02:26:11.212239",
   "Last Opened At": "2025-04-23 02:26:10.704566",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing."
 },
 {
   "Id": 175524411,
   "Rule Name": "javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/keyServer.ts#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524411",
   "Created At": "2025-04-23 02:26:11.212223",
   "Last Opened At": "2025-04-23 02:26:10.704557",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing."
 },
 {
   "Id": 175524410,
   "Rule Name": "javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/logfileServer.ts#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524410",
   "Created At": "2025-04-23 02:26:11.212207",
   "Last Opened At": "2025-04-23 02:26:10.704552",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing."
 },
 {
   "Id": 175524409,
   "Rule Name": "javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/quarantineServer.ts#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524409",
   "Created At": "2025-04-23 02:26:11.212191",
   "Last Opened At": "2025-04-23 02:26:10.704547",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing."
 },
 {
   "Id": 175524408,
   "Rule Name": "javascript.express.security.audit.express-ssrf.express-ssrf",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/profileImageUrlUpload.ts#L23",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524408",
   "Created At": "2025-04-23 02:26:11.212175",
   "Last Opened At": "2025-04-23 02:26:10.704542",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The following request request.get() was found to be crafted from user-input `req` which can lead to Server-Side Request Forgery (SSRF) vulnerabilities. It is recommended where possible to not allow user-input to craft the base request, but to be treated as part of the path or query parameter. When user-input is necessary to craft the request, it is recommeneded to follow OWASP best practices to prevent abuse. "
 },
 {
   "Id": 175524407,
   "Rule Name": "javascript.express.security.audit.xss.pug.explicit-unescape.template-explicit-unescape",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/views/promotionVideo.pug#L79",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524407",
   "Created At": "2025-04-23 02:26:11.212159",
   "Last Opened At": "2025-04-23 02:26:10.704538",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected an explicit unescape in a Pug template, using either '!=' or '!{...}'. If external data can reach these locations, your application is exposed to a cross-site scripting (XSS) vulnerability. If you must do this, ensure no external data can reach this location."
 },
 {
   "Id": 175524406,
   "Rule Name": "javascript.express.security.express-insecure-template-usage.express-insecure-template-usage",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/userProfile.ts#L56",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524406",
   "Created At": "2025-04-23 02:26:11.212143",
   "Last Opened At": "2025-04-23 02:26:10.704533",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "User data from `req` is being compiled into the template, which can lead to a Server Side Template Injection (SSTI) vulnerability."
 },
 {
   "Id": 175524405,
   "Rule Name": "javascript.express.session-fixation.session-fixation",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L195",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524405",
   "Created At": "2025-04-23 02:26:11.212127",
   "Last Opened At": "2025-04-23 02:26:10.704528",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected `req` argument which enters `res.cookie`, this can lead to session fixation vulnerabilities if an attacker can control the cookie value. This vulnerability can lead to unauthorized access to accounts, and in some esoteric cases, Cross-Site-Scripting (XSS). Users should not be able to influence cookies directly, for session cookies, they should be generated securely using an approved session management library. If the cookie does need to be set by a user, consider using an allow-list based approach to restrict the cookies which can be set."
 },
 {
   "Id": 175524404,
   "Rule Name": "javascript.express.web.cookies-default-express.cookies-default-express",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L195",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524404",
   "Created At": "2025-04-23 02:26:11.212111",
   "Last Opened At": "2025-04-23 02:26:10.704523",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Having default cookie settings is insecure because they often lack critical security attributes, leaving cookies vulnerable to various attacks like CSRF or XSS. Always configure cookies with security attributes: `HttpOnly`, `Secure`, `SameSite`."
 },
 {
   "Id": 175524403,
   "Rule Name": "javascript.express.web.cookies-default-express.cookies-default-express",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/updateUserProfile.ts#L32",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524403",
   "Created At": "2025-04-23 02:26:11.212095",
   "Last Opened At": "2025-04-23 02:26:10.704519",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Having default cookie settings is insecure because they often lack critical security attributes, leaving cookies vulnerable to various attacks like CSRF or XSS. Always configure cookies with security attributes: `HttpOnly`, `Secure`, `SameSite`."
 },
 {
   "Id": 175524402,
   "Rule Name": "javascript.express.web.cors-default-config-express.cors-default-config-express",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/server.ts#L175",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524402",
   "Created At": "2025-04-23 02:26:11.212080",
   "Last Opened At": "2025-04-23 02:26:10.704514",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Having default CORS settings is insecure because they often allow overly permissive cross-origin access, exposing your application to unauthorized data sharing, potentially exposing sensitive data to malicious websites. Avoid using wildcard (*) origins, especially for endpoints that handle sensitive data. Use a restrictive CORS policy by explicitly specifying trusted origins in the Access-Control-Allow-Origin header."
 },
 {
   "Id": 175524401,
   "Rule Name": "javascript.express.web.cors-default-config-express.cors-default-config-express",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/server.ts#L176",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524401",
   "Created At": "2025-04-23 02:26:11.212064",
   "Last Opened At": "2025-04-23 02:26:10.704508",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Having default CORS settings is insecure because they often allow overly permissive cross-origin access, exposing your application to unauthorized data sharing, potentially exposing sensitive data to malicious websites. Avoid using wildcard (*) origins, especially for endpoints that handle sensitive data. Use a restrictive CORS policy by explicitly specifying trusted origins in the Access-Control-Allow-Origin header."
 },
 {
   "Id": 175524400,
   "Rule Name": "javascript.express.web.tainted-redirect-express.tainted-redirect-express",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/redirect.ts#L19",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524400",
   "Created At": "2025-04-23 02:26:11.212048",
   "Last Opened At": "2025-04-23 02:26:10.704503",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The application builds a URL using user-controlled input which can lead to an open redirect vulnerability. An attacker can manipulate the URL and redirect users to an arbitrary domain. Open redirect vulnerabilities can lead to issues such as Cross-site scripting (XSS) or redirecting to a malicious domain for activities such as phishing to capture users' credentials. To prevent this vulnerability perform strict input validation of the domain against an allowlist of approved domains. Notify a user in your application that they are leaving the website. Display a domain where they are redirected to the user. A user can then either accept or deny the redirect to an untrusted site."
 },
 {
   "Id": 175524399,
   "Rule Name": "javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L56",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524399",
   "Created At": "2025-04-23 02:26:11.212032",
   "Last Opened At": "2025-04-23 02:26:10.704498",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
 },
 {
   "Id": 175524398,
   "Rule Name": "javascript.jssha.jssha-sha1.jssha-sha1",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/utils.ts#L90",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524398",
   "Created At": "2025-04-23 02:26:11.212016",
   "Last Opened At": "2025-04-23 02:26:10.704493",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The SHA1 hashing algorithm is considered to be weak. If this is used in any sensitive operation such as password hashing, or is used to ensure data integrity (collision sensitive) then you should use a stronger hashing algorithm. For passwords, consider using `Argon2id`, `scrypt`, or `bcrypt`. For data integrity, consider using `SHA-256`."
 },
 {
   "Id": 175524397,
   "Rule Name": "javascript.lang.hardcoded.strings.detected-private-key.detected-private-key",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L23",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524397",
   "Created At": "2025-04-23 02:26:11.212000",
   "Last Opened At": "2025-04-23 02:26:10.704488",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "A secret is hard-coded in the application. Secrets stored in source code, such as credentials, identifiers, and other types of sensitive data, can be leaked and used by internal or external malicious actors. Use environment variables to securely provide credentials and other secrets or retrieve them from a secure vault or Hardware Security Module (HSM)."
 },
 {
   "Id": 175524396,
   "Rule Name": "javascript.lang.hardcoded.strings.detected-private-key.detected-private-key",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L23",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524396",
   "Created At": "2025-04-23 02:26:11.211984",
   "Last Opened At": "2025-04-23 02:26:10.704483",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "A secret is hard-coded in the application. Secrets stored in source code, such as credentials, identifiers, and other types of sensitive data, can be leaked and used by internal or external malicious actors. Use environment variables to securely provide credentials and other secrets or retrieve them from a secure vault or Hardware Security Module (HSM)."
 },
 {
   "Id": 175524395,
   "Rule Name": "javascript.lang.hardcoded.strings.detected-private-key.detected-private-key",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L56",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524395",
   "Created At": "2025-04-23 02:26:11.211968",
   "Last Opened At": "2025-04-23 02:26:10.704476",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "A secret is hard-coded in the application. Secrets stored in source code, such as credentials, identifiers, and other types of sensitive data, can be leaked and used by internal or external malicious actors. Use environment variables to securely provide credentials and other secrets or retrieve them from a secure vault or Hardware Security Module (HSM)."
 },
 {
   "Id": 175524394,
   "Rule Name": "javascript.lang.hardcoded.strings.detected-private-key.detected-private-key",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L152",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524394",
   "Created At": "2025-04-23 02:26:11.211952",
   "Last Opened At": "2025-04-23 02:26:10.704471",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "A secret is hard-coded in the application. Secrets stored in source code, such as credentials, identifiers, and other types of sensitive data, can be leaked and used by internal or external malicious actors. Use environment variables to securely provide credentials and other secrets or retrieve them from a secure vault or Hardware Security Module (HSM)."
 },
 {
   "Id": 175524393,
   "Rule Name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": true,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/codingChallenges.ts#L76",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524393",
   "Created At": "2025-04-23 02:26:11.211936",
   "Last Opened At": "2025-04-23 02:26:10.704466",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "RegExp() called with a `challengeKey` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
 },
 {
   "Id": 175524392,
   "Rule Name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": true,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/codingChallenges.ts#L76",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524392",
   "Created At": "2025-04-23 02:26:11.211920",
   "Last Opened At": "2025-04-23 02:26:10.704461",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "RegExp() called with a `file` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
 },
 {
   "Id": 175524391,
   "Rule Name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": true,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/codingChallenges.ts#L76",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524391",
   "Created At": "2025-04-23 02:26:11.211903",
   "Last Opened At": "2025-04-23 02:26:10.704455",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "RegExp() called with a `paths` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
 },
 {
   "Id": 175524390,
   "Rule Name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": true,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/codingChallenges.ts#L78",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524390",
   "Created At": "2025-04-23 02:26:11.211884",
   "Last Opened At": "2025-04-23 02:26:10.704450",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "RegExp() called with a `challengeKey` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
 },
 {
   "Id": 175524389,
   "Rule Name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": true,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/codingChallenges.ts#L78",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524389",
   "Created At": "2025-04-23 02:26:11.211867",
   "Last Opened At": "2025-04-23 02:26:10.704445",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "RegExp() called with a `file` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
 },
 {
   "Id": 175524388,
   "Rule Name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": true,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/codingChallenges.ts#L78",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524388",
   "Created At": "2025-04-23 02:26:11.211851",
   "Last Opened At": "2025-04-23 02:26:10.704440",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "RegExp() called with a `paths` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
 },
 {
   "Id": 175524387,
   "Rule Name": "javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L44",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524387",
   "Created At": "2025-04-23 02:26:11.211836",
   "Last Opened At": "2025-04-23 02:26:10.704435",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a hardcoded hmac key. Avoid hardcoding secrets and consider using an alternate option such as reading the secret from a config file or using an environment variable."
 },
 {
   "Id": 175524386,
   "Rule Name": "javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L152",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524386",
   "Created At": "2025-04-23 02:26:11.211819",
   "Last Opened At": "2025-04-23 02:26:10.704430",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a hardcoded hmac key. Avoid hardcoding secrets and consider using an alternate option such as reading the secret from a config file or using an environment variable."
 },
 {
   "Id": 175524385,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/staticData.ts#L7",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524385",
   "Created At": "2025-04-23 02:26:11.211803",
   "Last Opened At": "2025-04-23 02:26:10.704424",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524384,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/codingChallenges.ts#L24",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524384",
   "Created At": "2025-04-23 02:26:11.211787",
   "Last Opened At": "2025-04-23 02:26:10.704419",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524383,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/codingChallenges.ts#L24",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524383",
   "Created At": "2025-04-23 02:26:11.211772",
   "Last Opened At": "2025-04-23 02:26:10.704414",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524382,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/startup/restoreOverwrittenFilesWithOriginals.ts#L28",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524382",
   "Created At": "2025-04-23 02:26:11.211756",
   "Last Opened At": "2025-04-23 02:26:10.704409",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524381,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/startup/validatePreconditions.ts#L121",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524381",
   "Created At": "2025-04-23 02:26:11.211740",
   "Last Opened At": "2025-04-23 02:26:10.704403",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524380,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/dataErasure.ts#L69",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524380",
   "Created At": "2025-04-23 02:26:11.211724",
   "Last Opened At": "2025-04-23 02:26:10.704397",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524379,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/fileServer.ts#L33",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524379",
   "Created At": "2025-04-23 02:26:11.211708",
   "Last Opened At": "2025-04-23 02:26:10.704392",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524378,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/fileUpload.ts#L32",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524378",
   "Created At": "2025-04-23 02:26:11.211692",
   "Last Opened At": "2025-04-23 02:26:10.704387",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524377,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/fileUpload.ts#L42",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524377",
   "Created At": "2025-04-23 02:26:11.211676",
   "Last Opened At": "2025-04-23 02:26:10.704381",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524376,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/keyServer.ts#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524376",
   "Created At": "2025-04-23 02:26:11.211660",
   "Last Opened At": "2025-04-23 02:26:10.704376",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524375,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/logfileServer.ts#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524375",
   "Created At": "2025-04-23 02:26:11.211644",
   "Last Opened At": "2025-04-23 02:26:10.704370",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524374,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/order.ts#L45",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524374",
   "Created At": "2025-04-23 02:26:11.211628",
   "Last Opened At": "2025-04-23 02:26:10.704365",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524373,
   "Rule Name": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/quarantineServer.ts#L14",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524373",
   "Created At": "2025-04-23 02:26:11.211611",
   "Last Opened At": "2025-04-23 02:26:10.704359",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
 },
 {
   "Id": 175524372,
   "Rule Name": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/frontend/src/hacking-instructor/helpers/helpers.ts#L38",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524372",
   "Created At": "2025-04-23 02:26:11.211595",
   "Last Opened At": "2025-04-23 02:26:10.704353",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
 },
 {
   "Id": 175524371,
   "Rule Name": "javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/videoHandler.ts#L57",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524371",
   "Created At": "2025-04-23 02:26:11.211579",
   "Last Opened At": "2025-04-23 02:26:10.704348",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Cannot determine what 'subs' is and it is used with a '<script>' tag. This could be susceptible to cross-site scripting (XSS). Ensure 'subs' is not externally controlled, or sanitize this data."
 },
 {
   "Id": 175524370,
   "Rule Name": "javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/routes/videoHandler.ts#L69",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524370",
   "Created At": "2025-04-23 02:26:11.211563",
   "Last Opened At": "2025-04-23 02:26:10.704342",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Cannot determine what 'subs' is and it is used with a '<script>' tag. This could be susceptible to cross-site scripting (XSS). Ensure 'subs' is not externally controlled, or sanitize this data."
 },
 {
   "Id": 175524369,
   "Rule Name": "javascript.node-stdlib.cryptography.crypto-weak-algorithm.crypto-weak-algorithm",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/Gruntfile.js#L77",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524369",
   "Created At": "2025-04-23 02:26:11.211547",
   "Last Opened At": "2025-04-23 02:26:10.704337",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The use of a weak cryptographic algorithm (e.g., SHA-1 or MD5) has been identified. These algorithms are considered insecure due to vulnerabilities that make them susceptible to collision attacks, allowing attackers to compromise data integrity or security. Replace SHA-1 or MD5 with secure hashing algorithms, such as: SHA-256 or higher (e.g., SHA-3)."
 },
 {
   "Id": 175524368,
   "Rule Name": "javascript.node-stdlib.cryptography.crypto-weak-algorithm.crypto-weak-algorithm",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/lib/insecurity.ts#L43",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524368",
   "Created At": "2025-04-23 02:26:11.211531",
   "Last Opened At": "2025-04-23 02:26:10.704332",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "The use of a weak cryptographic algorithm (e.g., SHA-1 or MD5) has been identified. These algorithms are considered insecure due to vulnerabilities that make them susceptible to collision attacks, allowing attackers to compromise data integrity or security. Replace SHA-1 or MD5 with secure hashing algorithms, such as: SHA-256 or higher (e.g., SHA-3)."
 },
 {
   "Id": 175524367,
   "Rule Name": "javascript.sequelize.node-sequelize-hardcoded-secret-argument.node-sequelize-hardcoded-secret-argument",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "High",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/models/index.ts#L29",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524367",
   "Created At": "2025-04-23 02:26:11.211515",
   "Last Opened At": "2025-04-23 02:26:10.704326",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "A secret is hard-coded in the application. Secrets stored in source code, such as credentials, identifiers, and other types of sensitive data, can be leaked and used by internal or external malicious actors. Use environment variables to securely provide credentials and other secrets or retrieve them from a secure vault or Hardware Security Module (HSM)."
 },
 {
   "Id": 175524366,
   "Rule Name": "typescript.angular.angular-route-bypass-security-trust.angular-route-bypass-security-trust",
   "Product": "Code",
   "Severity": "Medium",
   "Status": "Open",
   "Confidence": "Medium",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/frontend/src/app/search-result/search-result.component.ts#L160",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524366",
   "Created At": "2025-04-23 02:26:11.211498",
   "Last Opened At": "2025-04-23 02:26:10.704319",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. Validate the user input, perform contextual output encoding, or sanitize the input. A popular library used to prevent XSS is DOMPurify. You can also use libraries and frameworks such as Angular, Vue, and React, which offer secure defaults when rendering input."
 },
 {
   "Id": 175524365,
   "Rule Name": "javascript.audit.detect-replaceall-sanitization.detect-replaceall-sanitization",
   "Product": "Code",
   "Severity": "Low",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/restfulXssChallenge_2.ts#L59",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524365",
   "Created At": "2025-04-23 02:26:11.211482",
   "Last Opened At": "2025-04-23 02:26:10.704314",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a call to `replaceAll()` in an attempt to HTML escape the string `tableData[i].description`. Manually sanitizing input through a manually built list can be circumvented in many situations, and it's better to use a well known sanitization library such as `sanitize-html` or `DOMPurify`."
 },
 {
   "Id": 175524364,
   "Rule Name": "javascript.audit.detect-replaceall-sanitization.detect-replaceall-sanitization",
   "Product": "Code",
   "Severity": "Low",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/data/static/codefixes/restfulXssChallenge_2.ts#L59",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524364",
   "Created At": "2025-04-23 02:26:11.211465",
   "Last Opened At": "2025-04-23 02:26:10.704306",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected a call to `replaceAll()` in an attempt to HTML escape the string `tableData[i].description.replaceAll('<', '&lt;')`. Manually sanitizing input through a manually built list can be circumvented in many situations, and it's better to use a well known sanitization library such as `sanitize-html` or `DOMPurify`."
 },
 {
   "Id": 175524363,
   "Rule Name": "javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
   "Product": "Code",
   "Severity": "Low",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/server.ts#L106",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524363",
   "Created At": "2025-04-23 02:26:11.211448",
   "Last Opened At": "2025-04-23 02:26:10.704297",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies."
 },
 {
   "Id": 175524362,
   "Rule Name": "javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring",
   "Product": "Code",
   "Severity": "Low",
   "Status": "Open",
   "Confidence": "Low",
   "Category": "security",
   "Is Pro Rule": false,
   "Assistant Triage Result": "",
   "Assistant Triage Reason": "",
   "Assistant Component": "",
   "Repository Name": "fitriadamayanti12/juice-shop",
   "Repository Url": "https://github.com/fitriadamayanti12/juice-shop",
   "Line Of Code Url": "https://github.com/fitriadamayanti12/juice-shop/blob/4c35cefa4cb0e9f7cf87cbb23a2f75e05f5d47f5/server.ts#L149",
   "Semgrep Platform Link": "https://semgrep.dev/orgs/fitria-damayanti/findings/175524362",
   "Created At": "2025-04-23 02:26:11.211395",
   "Last Opened At": "2025-04-23 02:26:10.704275",
   "Branch": "refs/heads/master",
   "Triaged At": "",
   "Triage Comment": "",
   "Triage Reason": "",
   "Rule Description": "Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
 }
]